#!/bin/bash
_show_all_vms_on_esxi(){


#Varibles and functions
    _ESXI_BAKDIR="/srv/data"
    _CURRENT_ESXi="${_TMP}/$HOST"

    declare -a _TABLE_header
        _TABLE_header[0]=VMid
        _TABLE_header[1]=VMname
        _TABLE_header[2]=VM_Status
        _TABLE_header[3]=VM_HostName
        _TABLE_header[4]=VM_IP_Adreses
        _TABLE_header[5]=VM_MAC_Adreses
        _TABLE_header[6]=VM_last_BackUP
        
    declare -A _TABLE_value

#####


    __table_header(){
        echo "
                <script type=\"text/javascript\">
                    \$(document).ready(function(){
                        \$('table').tablesorter();
                    });
                </script>
                <div class=\"row-fluid\">
                <div class=\"span12\">
                <table class=\"table table-striped table-bordered table-condensed tablesorter\">
                    <thead>
            "

        echo "<tr class=\"tablesorter-header\">"
            for i  in ${_TABLE_header[@]}
            do
                echo "<th><b>${i}</b></th>"
            done
        echo "</tr></thead><tbody>"
        }

    __table_value(){
        __table_string(){
            echo "<td>${*}</td>"
        }
while read _LINE 
do
    echo "<tr>"
    _VMid=`echo $_LINE | awk '{ printf $1 }'`
        _TABLE_value[VMid]=$(echo $_LINE | awk '{ printf $1 }')
        _TABLE_value[VMname]=$(echo $_LINE | awk '{ printf $2 }')
        _TABLE_value[VM_Status]=$(cat ${_CURRENT_ESXi}/"$_VMid".log | grep guestState | gawk -F'guestState = "' '{ printf $2 }' | gawk -F'",' '{ printf $1 }')
        _TABLE_value[VM_HostName]=$(cat ${_CURRENT_ESXi}/"$_VMid".log | grep hostName | head -1 | gawk -F'hostName = "' '{ printf $2 }' | gawk -F'",' '{ printf $1 }')
#        _TABLE_value[VM_IP_Adreses]=$(cat ${_CURRENT_ESXi}/"$_VMid".log | tr "\n" " " 2>&1 | gawk -F"vim.vm.GuestInfo.NicInfo" '{ print $3 }' | gawk -F"[" '{ print $2 }' | gawk -F"]" '{ print $1 }')
#        _TABLE_value[VM_IP_Adreses]=$(perl -e 'my $f=0;foreach(<>){$f=0 if /\]/;print "$1 " if $f && /"(.+)"/;$f=1 if /VM Network/;} ${_CURRENT_ESXi}/"$_VMid".log)
        _TABLE_value[VM_IP_Adreses]=$(cat ${_CURRENT_ESXi}/"$_VMid".log | tr "\n" " " 2>&1 |\
            sed -e 's/vim.vm.GuestInfo.NicInfo/vim.vm.GuestInfo.NicInfo\n/g' |\
            awk -F']' '{print $1}' | egrep "dynamicType.*network.*ipAddress"| awk -F'[' '{print $2}')
        #_TABLE_value[VM_MAC_Adreses]=$(cat ${_CURRENT_ESXi}/"$_VMid".log | grep macAddress | gawk '{printf $3" "}' | tr ',' ' ')
        _TABLE_value[VM_MAC_Adreses]=$(cat ${_CURRENT_ESXi}/"$_VMid".log | grep macAddress | gawk '{printf $3" "}')
        _TABLE_value[VM_last_BackUP]=$(stat -c %y $(ls -dl ${_ESXI_BAKDIR}/${HOST}/${_TABLE_value[VMname]}/* | tail -n 1 | awk '{print $NF}') | cut -f1 -d" ")

        echo ls -dl ${_ESXI_BAKDIR}/${HOST}/${_TABLE_value[VMname]}/* | tail -n 1 | awk '{print $NF}' >> /tmp/tt
        ls -dl ${_ESXI_BAKDIR}/${HOST}/${_TABLE_value[VMname]}/* | tail -n 1 | awk '{print $NF}' >> /tmp/tt
        stat -c %y $(ls -dl ${_ESXI_BAKDIR}/${HOST}/${_TABLE_value[VMname]}/* | tail -n 1 | awk '{print $NF}') >> /tmp/tt
##################################    
    __table_string ${_TABLE_value[VMid]}
    __table_string ${_TABLE_value[VMname]}
        if [ ${_TABLE_value[VM_Status]} == running ]
            then echo "<td><font color="green"> ${_TABLE_value[VM_Status]}</font></td>"
            else echo "<td><font color="red">${_TABLE_value[VM_Status]}</font></td>"
        fi
    __table_string ${_TABLE_value[VM_HostName]}
    __table_string ${_TABLE_value[VM_IP_Adreses]}
    __table_string ${_TABLE_value[VM_MAC_Adreses]%??}
    __table_string ${_TABLE_value[VM_last_BackUP]}
        
    echo "</tr>"
done < ${_CURRENT_ESXi}/$HOST.allvms
}

#END Varibles and functions



# Header 
echo "Updating was done: $(cat ${_TMP}/$HOST/update_date)"

__table_header
    __table_value


# Futer
echo "

      </tbody>
          </table>
            </div>
            </div>
            "
# END Futer

}
